@model MiEcommApp.Models.Customer

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Customer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="display: none;">
            <label asp-for="CustomerId" class="control-label"></label>
            <input asp-for="CustomerId" id="GeneratedCustomerId" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactName" class="control-label"></label>
                <input asp-for="ContactName" class="form-control" />
                <span asp-validation-for="ContactName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactTitle" class="control-label"></label>
                <input asp-for="ContactTitle" class="form-control" />
                <span asp-validation-for="ContactTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Region" class="control-label"></label>
                <input asp-for="Region" class="form-control" />
                <span asp-validation-for="Region" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PostalCode" class="control-label"></label>
                <input asp-for="PostalCode" class="form-control" />
                <span asp-validation-for="PostalCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control" />
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Fax" class="control-label"></label>
                <input asp-for="Fax" class="form-control" />
                <span asp-validation-for="Fax" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        /*
        $(function(){
            $('#CompanyName').on('blur', function() {
                let companyName = $(this).val().toUpperCase().substring(0,5);
                alert(`Customer ID will be: ${companyName}`);
            });
        });
        */

        /*
        $(document).ready(function () {
            $("#CompanyName").on('input', function () {
                var companyName = $(this).val();
                var hash = Math.abs(getHashCode(companyName));
                var base36 = hash.toString(36).toUpperCase();
                if (base36.length > 5) {
                    base36 = base36.substring(0, 5);
                } else if (base36.length < 5) {
                    base36 = base36.padEnd(5, 'X');
                }
                alert(`Customer ID will be: ${base36}`);
            });
        });
        function getHashCode(s) {
            var hash = 0, i, chr;
            for (i = 0; i < s.length; i++) {
                chr = s.charCodeAt(i);
                hash = ((hash << 5) - hash) + chr;
                hash |= 0; // Convert to 32bit integer
            }
            return hash;
        }
        */

       /*
        $(document).ready(function () {
            $("#CompanyName").on('change', function () {  // Changed 'input' to 'change'
                var companyName = $(this).val();

                var hash = Math.abs(getHashCode(companyName));
                var base36 = hash.toString(36).toUpperCase();

                if (base36.length > 5) {
                    base36 = base36.substring(0, 5);
                } else if (base36.length < 5) {
                    base36 = base36.padEnd(5, 'X');
                }

                alert(`Customer ID will be: ${base36}`);
            });
        });

        function getHashCode(s) {
            var hash = 0, i, chr;
            for (i = 0; i < s.length; i++) {
                chr = s.charCodeAt(i);
                hash = ((hash << 5) - hash) + chr;
                hash |= 0; // Convert to 32bit integer
            }
            return hash;
        }
        */

        $(document).ready(function () {
            $("#CompanyName").on('change', function () {
                var companyName = $(this).val();

                $.get("/Customers/GetCustomerId", { companyName: companyName }, function (customerId) {
                    alert(`Customer ID will be: ${customerId}`);
                });
            });
        });


    </script>

}
